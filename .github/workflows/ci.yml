name: CI

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Python testlerin varsa:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run Python tests
        run: |
          if [ -d tests ]; then pytest -q || true; fi

      # Foundry testleri:
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
      - name: Run Forge tests
        run: forge test -vvv

    deploy:
    name: Deploy (Foundry)
    runs-on: ubuntu-latest
    needs: build
    if: needs.build.result == 'success' && github.ref == 'refs/heads/main'
    permissions:
      contents: read

    env:
      RPC_URL: ${{ secrets.SEPOLIA_RPC_URL }}         # ya da HOLESKY_RPC_URL
      PRIVATE_KEY: ${{ secrets.DEPLOYER_PRIVATE_KEY }}
      ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Deploy contract
        run: |
          forge script script/Deploy.s.sol:Deploy \
            --rpc-url "$RPC_URL" \
            --private-key "$PRIVATE_KEY" \
            --broadcast -vvv

      - name: Verify on Etherscan (optional)
        if: env.ETHERSCAN_API_KEY != ''
        run: |
          forge verify-contract \
            --chain sepolia \
            --etherscan-api-key "$ETHERSCAN_API_KEY"

    # build başarılıysa ve main branch ise deploy et
    if: needs.build.result == 'success' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
    env:
      # Gerekli secret'lar
      ETH_RPC_URL: ${{ secrets.ETH_RPC_URL }}            # Alchemy/Infura RPC
      PRIVATE_KEY: ${{ secrets.DEPLOYER_PRIVATE_KEY }}   # 0x öneksiz, 64 hex
      ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}# (opsiyonel) verify için
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      # (Opsiyonel) forge-std’ı lib’e al
      - name: Install forge-std
        run: |
          mkdir -p lib
          if [ ! -d lib/forge-std ]; then
            git clone --depth 1 https://github.com/foundry-rs/forge-std lib/forge-std
          fi

      - name: Deploy script
        run: |
          forge script script/Deploy.s.sol:Deploy \
            --rpc-url "$ETH_RPC_URL" \
            --private-key "$PRIVATE_KEY" \
            --broadcast -vvv

      # (Opsiyonel) verify
      - name: Verify on Etherscan
        if: env.ETHERSCAN_API_KEY != ''
        run: |
          forge verify-contract <DEPLOYED_ADDRESS> <ContractName> \
            --chain-id <CHAIN_ID> \
            --etherscan-api-key "$ETHERSCAN_API_KEY" \
            --watch
